buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
//		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//		jcenter()
	}
	dependencies {
		classpath "net.onedaybeard.artemis:artemis-odb-gradle-plugin:2.3.0"
	}
}

plugins {
	id "java"
	id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
}

apply plugin: "artemis"

version = '0.1'

sourceSets {
	main.java.srcDirs = [ "src" ]
	main.kotlin.srcDirs = [ "src" ]
	main.resources.srcDirs = [ "src" ]
}

archivesBaseName = "AuroraJ"

project.ext {
	mainClassName = "se.exuvo.aurora.DesktopLauncher"
	assetsDir = new File("assets");
	weaveDir = new File("$buildDir/explodedForWeave")
}

jar.manifest.attributes 'Main-Class': project.mainClassName
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

tasks.withType(JavaCompile).all {
	sourceCompatibility = "11"
	targetCompatibility = "11"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "11"
		freeCompilerArgs = ["-Xno-param-assertions", "-Xno-call-assertions", "-Xno-receiver-assertions"]
	}
}

dependencies {
	runtimeOnly "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	//runtimeOnly "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	runtimeOnly "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
	runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-macos"
	implementation "org.apache.logging.log4j:log4j-iostreams:$log4jVersion"

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

	implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	//implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	//implementation "com.badlogicgames.gdx:gdx-ai:1.8.1"
	implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
	//implementation "com.badlogicgames.box2dlights:box2dlights:1.4"

	//implementation "io.github.libktx:ktx-actors:$ktxVersion"
	//implementation "io.github.libktx:ktx-app:$ktxVersion"
	//implementation "io.github.libktx:ktx-assets:$ktxVersion"
	//implementation "io.github.libktx:ktx-collections:$ktxVersion"
	//implementation "io.github.libktx:ktx-freetype:$ktxVersion"
	//implementation "io.github.libktx:ktx-freetype-async:$ktxVersion"
	//implementation "io.github.libktx:ktx-math:$ktxVersion"
	//implementation "io.github.libktx:ktx-scene2d:$ktxVersion"
	//implementation "io.github.libktx:ktx-style:$ktxVersion"

	implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
	implementation "com.martiansoftware:jsap:$jsapVersion"
	implementation "com.esotericsoftware:kryo:4.0.1"
	implementation "com.esotericsoftware:jsonbeans:0.7"
	implementation "org.xerial:sqlite-jdbc:3.30.1"
	//implementation files("lib/sqlite-jdbc-3.30.1.jar")
	implementation "org.jasypt:jasypt:1.9.2"

	implementation "net.onedaybeard.artemis:artemis-odb:$artemisVersion"
	//implementation "net.onedaybeard.artemis:artemis-odb-serializer-json-libgdx:$artemisVersion"
	//implementation "net.onedaybeard.artemis:artemis-odb-serializer-kryo:$artemisVersion"
	implementation "net.mostlyoriginal.artemis-odb:contrib-core:$artemisContribVersion"
	implementation "net.mostlyoriginal.artemis-odb:contrib-eventbus:$artemisContribVersion"
	//implementation "net.mostlyoriginal.artemis-odb:contrib-plugin-operations:$artemisContribVersion"
	//implementation "net.mostlyoriginal.artemis-odb:contrib-plugin-profiler:$artemisContribVersion"

	implementation "org.apache.commons:commons-math3:3.6.1"
	implementation "uk.co.omega-prime:btreemap:1.2.0" // https://github.com/batterseapower/btreemap

	implementation "org.lwjgl:lwjgl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-openal:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opencl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-stb:$lwjglVersion"

	["gl", "glfw", "core"].each {
		implementation ("com.github.kotlin-graphics.imgui:imgui-$it:v1.76") {
			exclude group: 'org.lwjgl'
			exclude group: 'org.jetbrains.kotlin'
			exclude(group: 'com.github.kotlin-graphics.uno-sdk', module: "uno-awt")
			exclude(group: 'com.github.kotlin-graphics.uno-sdk', module: "uno-vk")
		}
	}
	compileOnly "com.github.kotlin-graphics:glm:1b4ac18dd1a3c23440d3f33596688aac60bc0141"
	compileOnly "com.github.kotlin-graphics.uno-sdk:uno-core:402f5f495429b7f2178a1d200c32bb5ed2f7e6fa"
}

task run(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
//	workingDir = project.assetsDir
	ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
//	workingDir = project.assetsDir
	ignoreExitValue = true
	debug = true
}

// https://github.com/junkdog/artemis-odb/wiki/Weaving-LibGDX
// Prepare folder with all dependencies exploded.
task explodeForWeave(type: Sync) {
	duplicatesStrategy = "include"
	dependsOn classes, configurations.runtimeClasspath

	into project.weaveDir
	
	from (configurations.runtimeClasspath.findAll{it.name.endsWith("jar")}.collect{zipTree(it)}) {
		exclude "fonts/ArialUni.TTF"
		exclude "org/sqlite/native/FreeBSD/**"
		exclude "org/sqlite/native/Linux/ppc64/**"
		exclude "org/sqlite/native/Linux/armv6/**"
		exclude "org/sqlite/native/Linux/armv7/**"
		exclude "org/sqlite/native/Linux/arm/**"
		exclude "org/sqlite/native/Linux/aarch64/**"
		exclude "org/sqlite/native/Linux/android-arm/**"
		exclude "linux/arm32/**"
		exclude "linux/arm64/**"
		//TODO remove these and make overwrite work instead
		exclude "com/badlogic/gdx/Lwjgl3Graphics.class"
		exclude "com/badlogic/gdx/Lwjgl3Graphics\$1.class"
		exclude "com/badlogic/gdx/Lwjgl3Graphics\$Lwjgl3DisplayMode.class"
		exclude "com/badlogic/gdx/Lwjgl3Graphics\$Lwjgl3Monitor.class"
		//TODO Gdx2DPixmap
	}
	//from {configurations.compile.collect {zipTree(it)}}
	
	from files(sourceSets.main.output.classesDirs) {
		exclude "**/*.kt"
	}
	from files(sourceSets.main.output.resourcesDir)
	
	from new File("$projectDir/log4j2.xml")
	
	into ("assets") {
		from files(project.assetsDir)
	}
}

// artemis-odb: weaving settings.
weave {
	dependsOn explodeForWeave
	classesDir = project.weaveDir
	enableArtemisPlugin = true
	enablePooledWeaving = true
	optimizeEntitySystems = true
}

//dependsOn: weave
task dist(type: Jar) {
	dependsOn explodeForWeave
	from project.weaveDir
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
}

